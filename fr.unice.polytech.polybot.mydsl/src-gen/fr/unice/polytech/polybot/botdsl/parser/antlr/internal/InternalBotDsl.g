/*
 * generated by Xtext 2.14.0
 */
grammar InternalBotDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package fr.unice.polytech.polybot.botdsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.unice.polytech.polybot.botdsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.unice.polytech.polybot.botdsl.services.BotDslGrammarAccess;

}

@parser::members {

 	private BotDslGrammarAccess grammarAccess;

    public InternalBotDslParser(TokenStream input, BotDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Scene";
   	}

   	@Override
   	protected BotDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleScene
entryRuleScene returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSceneRule()); }
	iv_ruleScene=ruleScene
	{ $current=$iv_ruleScene.current; }
	EOF;

// Rule Scene
ruleScene returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getSceneAccess().getRobotRobotParserRuleCall_0());
			}
			lv_robot_0_0=ruleRobot
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getSceneRule());
				}
				set(
					$current,
					"robot",
					lv_robot_0_0,
					"fr.unice.polytech.polybot.botdsl.BotDsl.Robot");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleInstruction
entryRuleInstruction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstructionRule()); }
	iv_ruleInstruction=ruleInstruction
	{ $current=$iv_ruleInstruction.current; }
	EOF;

// Rule Instruction
ruleInstruction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getMoveStraightParserRuleCall_0_0());
			}
			this_MoveStraight_0=ruleMoveStraight
			{
				$current = $this_MoveStraight_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getTurnRightParserRuleCall_0_1());
			}
			this_TurnRight_1=ruleTurnRight
			{
				$current = $this_TurnRight_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getTurnLeftParserRuleCall_0_2());
			}
			this_TurnLeft_2=ruleTurnLeft
			{
				$current = $this_TurnLeft_2.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getReleaseParserRuleCall_0_3());
			}
			this_Release_3=ruleRelease
			{
				$current = $this_Release_3.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getCatchParserRuleCall_0_4());
			}
			this_Catch_4=ruleCatch
			{
				$current = $this_Catch_4.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getInstructionAccess().getComeHomeParserRuleCall_0_5());
			}
			this_ComeHome_5=ruleComeHome
			{
				$current = $this_ComeHome_5.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			otherlv_6='label'
			{
				newLeafNode(otherlv_6, grammarAccess.getInstructionAccess().getLabelKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInstructionAccess().getNameEStringParserRuleCall_1_1_0());
					}
					lv_name_7_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInstructionRule());
						}
						set(
							$current,
							"name",
							lv_name_7_0,
							"fr.unice.polytech.polybot.botdsl.BotDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				otherlv_8='->'
				{
					newLeafNode(otherlv_8, grammarAccess.getInstructionAccess().getHyphenMinusGreaterThanSignKeyword_2_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInstructionAccess().getNextInstructionTrueEStringParserRuleCall_2_0_1_0());
						}
						lv_nextInstructionTrue_9_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInstructionRule());
							}
							set(
								$current,
								"nextInstructionTrue",
								lv_nextInstructionTrue_9_0,
								"fr.unice.polytech.polybot.botdsl.BotDsl.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_10='|'
				{
					newLeafNode(otherlv_10, grammarAccess.getInstructionAccess().getVerticalLineKeyword_2_0_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInstructionAccess().getNextInstructionFalseEStringParserRuleCall_2_0_3_0());
						}
						lv_nextInstructionFalse_11_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInstructionRule());
							}
							set(
								$current,
								"nextInstructionFalse",
								lv_nextInstructionFalse_11_0,
								"fr.unice.polytech.polybot.botdsl.BotDsl.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			    |
			(
				otherlv_12='->'
				{
					newLeafNode(otherlv_12, grammarAccess.getInstructionAccess().getHyphenMinusGreaterThanSignKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInstructionAccess().getNextInstructionEStringParserRuleCall_2_1_1_0());
						}
						lv_nextInstruction_13_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInstructionRule());
							}
							set(
								$current,
								"nextInstruction",
								lv_nextInstruction_13_0,
								"fr.unice.polytech.polybot.botdsl.BotDsl.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		otherlv_14=';'
		{
			newLeafNode(otherlv_14, grammarAccess.getInstructionAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleRobot
entryRuleRobot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRobotRule()); }
	iv_ruleRobot=ruleRobot
	{ $current=$iv_ruleRobot.current; }
	EOF;

// Rule Robot
ruleRobot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRobotAccess().getRobotAction_0(),
					$current);
			}
		)
		otherlv_1='Robot'
		{
			newLeafNode(otherlv_1, grammarAccess.getRobotAccess().getRobotKeyword_1());
		}
		(
			(
				lv_debug_2_0='debug'
				{
					newLeafNode(lv_debug_2_0, grammarAccess.getRobotAccess().getDebugDebugKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRobotRule());
					}
					setWithLastConsumed($current, "debug", true, "debug");
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getRobotAccess().getInstructionsInstructionParserRuleCall_3_0_0());
					}
					lv_instructions_3_0=ruleInstruction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRobotRule());
						}
						add(
							$current,
							"instructions",
							lv_instructions_3_0,
							"fr.unice.polytech.polybot.botdsl.BotDsl.Instruction");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRobotAccess().getInstructionsInstructionParserRuleCall_3_1_0());
					}
					lv_instructions_4_0=ruleInstruction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRobotRule());
						}
						add(
							$current,
							"instructions",
							lv_instructions_4_0,
							"fr.unice.polytech.polybot.botdsl.BotDsl.Instruction");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
	)
;

// Entry rule entryRuleMoveStraight
entryRuleMoveStraight returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMoveStraightRule()); }
	iv_ruleMoveStraight=ruleMoveStraight
	{ $current=$iv_ruleMoveStraight.current; }
	EOF;

// Rule MoveStraight
ruleMoveStraight returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='forward'
		{
			newLeafNode(otherlv_0, grammarAccess.getMoveStraightAccess().getForwardKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMoveStraightAccess().getDistanceEIntParserRuleCall_1_0());
				}
				lv_distance_1_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMoveStraightRule());
					}
					set(
						$current,
						"distance",
						lv_distance_1_0,
						"fr.unice.polytech.polybot.botdsl.BotDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTurnRight
entryRuleTurnRight returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTurnRightRule()); }
	iv_ruleTurnRight=ruleTurnRight
	{ $current=$iv_ruleTurnRight.current; }
	EOF;

// Rule TurnRight
ruleTurnRight returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='turnRight'
		{
			newLeafNode(otherlv_0, grammarAccess.getTurnRightAccess().getTurnRightKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTurnRightAccess().getAngleEIntParserRuleCall_1_0());
				}
				lv_angle_1_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTurnRightRule());
					}
					set(
						$current,
						"angle",
						lv_angle_1_0,
						"fr.unice.polytech.polybot.botdsl.BotDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTurnLeft
entryRuleTurnLeft returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTurnLeftRule()); }
	iv_ruleTurnLeft=ruleTurnLeft
	{ $current=$iv_ruleTurnLeft.current; }
	EOF;

// Rule TurnLeft
ruleTurnLeft returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='turnLeft'
		{
			newLeafNode(otherlv_0, grammarAccess.getTurnLeftAccess().getTurnLeftKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTurnLeftAccess().getAngleEIntParserRuleCall_1_0());
				}
				lv_angle_1_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTurnLeftRule());
					}
					set(
						$current,
						"angle",
						lv_angle_1_0,
						"fr.unice.polytech.polybot.botdsl.BotDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCatch
entryRuleCatch returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCatchRule()); }
	iv_ruleCatch=ruleCatch
	{ $current=$iv_ruleCatch.current; }
	EOF;

// Rule Catch
ruleCatch returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCatchAccess().getCatchAction_0(),
					$current);
			}
		)
		otherlv_1='catch'
		{
			newLeafNode(otherlv_1, grammarAccess.getCatchAccess().getCatchKeyword_1());
		}
	)
;

// Entry rule entryRuleRelease
entryRuleRelease returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReleaseRule()); }
	iv_ruleRelease=ruleRelease
	{ $current=$iv_ruleRelease.current; }
	EOF;

// Rule Release
ruleRelease returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getReleaseAccess().getReleaseAction_0(),
					$current);
			}
		)
		otherlv_1='release'
		{
			newLeafNode(otherlv_1, grammarAccess.getReleaseAccess().getReleaseKeyword_1());
		}
	)
;

// Entry rule entryRuleComeHome
entryRuleComeHome returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComeHomeRule()); }
	iv_ruleComeHome=ruleComeHome
	{ $current=$iv_ruleComeHome.current; }
	EOF;

// Rule ComeHome
ruleComeHome returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getComeHomeAccess().getComeHomeAction_0(),
					$current);
			}
		)
		otherlv_1='comeHome'
		{
			newLeafNode(otherlv_1, grammarAccess.getComeHomeAccess().getComeHomeKeyword_1());
		}
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
