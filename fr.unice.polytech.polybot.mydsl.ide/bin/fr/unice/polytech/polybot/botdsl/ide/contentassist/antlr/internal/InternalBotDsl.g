/*
 * generated by Xtext 2.14.0
 */
grammar InternalBotDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.unice.polytech.polybot.botdsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.unice.polytech.polybot.botdsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.unice.polytech.polybot.botdsl.services.BotDslGrammarAccess;

}
@parser::members {
	private BotDslGrammarAccess grammarAccess;

	public void setGrammarAccess(BotDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleScene
entryRuleScene
:
{ before(grammarAccess.getSceneRule()); }
	 ruleScene
{ after(grammarAccess.getSceneRule()); } 
	 EOF 
;

// Rule Scene
ruleScene 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSceneAccess().getRobotAssignment()); }
		(rule__Scene__RobotAssignment)
		{ after(grammarAccess.getSceneAccess().getRobotAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstruction
entryRuleInstruction
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstructionAccess().getGroup()); }
		(rule__Instruction__Group__0)
		{ after(grammarAccess.getInstructionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRobot
entryRuleRobot
:
{ before(grammarAccess.getRobotRule()); }
	 ruleRobot
{ after(grammarAccess.getRobotRule()); } 
	 EOF 
;

// Rule Robot
ruleRobot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRobotAccess().getGroup()); }
		(rule__Robot__Group__0)
		{ after(grammarAccess.getRobotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMoveStraight
entryRuleMoveStraight
:
{ before(grammarAccess.getMoveStraightRule()); }
	 ruleMoveStraight
{ after(grammarAccess.getMoveStraightRule()); } 
	 EOF 
;

// Rule MoveStraight
ruleMoveStraight 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMoveStraightAccess().getGroup()); }
		(rule__MoveStraight__Group__0)
		{ after(grammarAccess.getMoveStraightAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTurnRight
entryRuleTurnRight
:
{ before(grammarAccess.getTurnRightRule()); }
	 ruleTurnRight
{ after(grammarAccess.getTurnRightRule()); } 
	 EOF 
;

// Rule TurnRight
ruleTurnRight 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTurnRightAccess().getGroup()); }
		(rule__TurnRight__Group__0)
		{ after(grammarAccess.getTurnRightAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTurnLeft
entryRuleTurnLeft
:
{ before(grammarAccess.getTurnLeftRule()); }
	 ruleTurnLeft
{ after(grammarAccess.getTurnLeftRule()); } 
	 EOF 
;

// Rule TurnLeft
ruleTurnLeft 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTurnLeftAccess().getGroup()); }
		(rule__TurnLeft__Group__0)
		{ after(grammarAccess.getTurnLeftAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCatch
entryRuleCatch
:
{ before(grammarAccess.getCatchRule()); }
	 ruleCatch
{ after(grammarAccess.getCatchRule()); } 
	 EOF 
;

// Rule Catch
ruleCatch 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCatchAccess().getGroup()); }
		(rule__Catch__Group__0)
		{ after(grammarAccess.getCatchAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelease
entryRuleRelease
:
{ before(grammarAccess.getReleaseRule()); }
	 ruleRelease
{ after(grammarAccess.getReleaseRule()); } 
	 EOF 
;

// Rule Release
ruleRelease 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReleaseAccess().getGroup()); }
		(rule__Release__Group__0)
		{ after(grammarAccess.getReleaseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComeHome
entryRuleComeHome
:
{ before(grammarAccess.getComeHomeRule()); }
	 ruleComeHome
{ after(grammarAccess.getComeHomeRule()); } 
	 EOF 
;

// Rule ComeHome
ruleComeHome 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComeHomeAccess().getGroup()); }
		(rule__ComeHome__Group__0)
		{ after(grammarAccess.getComeHomeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getGroup()); }
		(rule__EInt__Group__0)
		{ after(grammarAccess.getEIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getMoveStraightParserRuleCall_0_0()); }
		ruleMoveStraight
		{ after(grammarAccess.getInstructionAccess().getMoveStraightParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getTurnRightParserRuleCall_0_1()); }
		ruleTurnRight
		{ after(grammarAccess.getInstructionAccess().getTurnRightParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getTurnLeftParserRuleCall_0_2()); }
		ruleTurnLeft
		{ after(grammarAccess.getInstructionAccess().getTurnLeftParserRuleCall_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getReleaseParserRuleCall_0_3()); }
		ruleRelease
		{ after(grammarAccess.getInstructionAccess().getReleaseParserRuleCall_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getCatchParserRuleCall_0_4()); }
		ruleCatch
		{ after(grammarAccess.getInstructionAccess().getCatchParserRuleCall_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getComeHomeParserRuleCall_0_5()); }
		ruleComeHome
		{ after(grammarAccess.getInstructionAccess().getComeHomeParserRuleCall_0_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getGroup_2_0()); }
		(rule__Instruction__Group_2_0__0)?
		{ after(grammarAccess.getInstructionAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getGroup_2_1()); }
		(rule__Instruction__Group_2_1__0)?
		{ after(grammarAccess.getInstructionAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group__0__Impl
	rule__Instruction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getAlternatives_0()); }
	(rule__Instruction__Alternatives_0)
	{ after(grammarAccess.getInstructionAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group__1__Impl
	rule__Instruction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getGroup_1()); }
	(rule__Instruction__Group_1__0)?
	{ after(grammarAccess.getInstructionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group__2__Impl
	rule__Instruction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getAlternatives_2()); }
	(rule__Instruction__Alternatives_2)
	{ after(grammarAccess.getInstructionAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getInstructionAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_1__0__Impl
	rule__Instruction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getLabelKeyword_1_0()); }
	'label'
	{ after(grammarAccess.getInstructionAccess().getLabelKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getNameAssignment_1_1()); }
	(rule__Instruction__NameAssignment_1_1)
	{ after(grammarAccess.getInstructionAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_2_0__0__Impl
	rule__Instruction__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getHyphenMinusGreaterThanSignKeyword_2_0_0()); }
	'->'
	{ after(grammarAccess.getInstructionAccess().getHyphenMinusGreaterThanSignKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_2_0__1__Impl
	rule__Instruction__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getNextInstructionTrueAssignment_2_0_1()); }
	(rule__Instruction__NextInstructionTrueAssignment_2_0_1)
	{ after(grammarAccess.getInstructionAccess().getNextInstructionTrueAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_2_0__2__Impl
	rule__Instruction__Group_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getVerticalLineKeyword_2_0_2()); }
	'|'
	{ after(grammarAccess.getInstructionAccess().getVerticalLineKeyword_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_2_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_2_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_2_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getNextInstructionFalseAssignment_2_0_3()); }
	(rule__Instruction__NextInstructionFalseAssignment_2_0_3)
	{ after(grammarAccess.getInstructionAccess().getNextInstructionFalseAssignment_2_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_2_1__0__Impl
	rule__Instruction__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getHyphenMinusGreaterThanSignKeyword_2_1_0()); }
	'->'
	{ after(grammarAccess.getInstructionAccess().getHyphenMinusGreaterThanSignKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getNextInstructionAssignment_2_1_1()); }
	(rule__Instruction__NextInstructionAssignment_2_1_1)
	{ after(grammarAccess.getInstructionAccess().getNextInstructionAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__0__Impl
	rule__Robot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getRobotAction_0()); }
	()
	{ after(grammarAccess.getRobotAccess().getRobotAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__1__Impl
	rule__Robot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getRobotKeyword_1()); }
	'Robot'
	{ after(grammarAccess.getRobotAccess().getRobotKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__2__Impl
	rule__Robot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getDebugAssignment_2()); }
	(rule__Robot__DebugAssignment_2)?
	{ after(grammarAccess.getRobotAccess().getDebugAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getGroup_3()); }
	(rule__Robot__Group_3__0)?
	{ after(grammarAccess.getRobotAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_3__0__Impl
	rule__Robot__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getInstructionsAssignment_3_0()); }
	(rule__Robot__InstructionsAssignment_3_0)
	{ after(grammarAccess.getRobotAccess().getInstructionsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getInstructionsAssignment_3_1()); }
	(rule__Robot__InstructionsAssignment_3_1)*
	{ after(grammarAccess.getRobotAccess().getInstructionsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MoveStraight__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoveStraight__Group__0__Impl
	rule__MoveStraight__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveStraight__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveStraightAccess().getForwardKeyword_0()); }
	'forward'
	{ after(grammarAccess.getMoveStraightAccess().getForwardKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveStraight__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoveStraight__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveStraight__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveStraightAccess().getDistanceAssignment_1()); }
	(rule__MoveStraight__DistanceAssignment_1)
	{ after(grammarAccess.getMoveStraightAccess().getDistanceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TurnRight__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurnRight__Group__0__Impl
	rule__TurnRight__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnRight__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnRightAccess().getTurnRightKeyword_0()); }
	'turnRight'
	{ after(grammarAccess.getTurnRightAccess().getTurnRightKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnRight__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurnRight__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnRight__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnRightAccess().getAngleAssignment_1()); }
	(rule__TurnRight__AngleAssignment_1)
	{ after(grammarAccess.getTurnRightAccess().getAngleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TurnLeft__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurnLeft__Group__0__Impl
	rule__TurnLeft__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnLeft__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnLeftAccess().getTurnLeftKeyword_0()); }
	'turnLeft'
	{ after(grammarAccess.getTurnLeftAccess().getTurnLeftKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnLeft__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurnLeft__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnLeft__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnLeftAccess().getAngleAssignment_1()); }
	(rule__TurnLeft__AngleAssignment_1)
	{ after(grammarAccess.getTurnLeftAccess().getAngleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Catch__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Catch__Group__0__Impl
	rule__Catch__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Catch__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatchAccess().getCatchAction_0()); }
	()
	{ after(grammarAccess.getCatchAccess().getCatchAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Catch__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Catch__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Catch__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatchAccess().getCatchKeyword_1()); }
	'catch'
	{ after(grammarAccess.getCatchAccess().getCatchKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Release__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Release__Group__0__Impl
	rule__Release__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Release__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReleaseAccess().getReleaseAction_0()); }
	()
	{ after(grammarAccess.getReleaseAccess().getReleaseAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Release__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Release__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Release__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReleaseAccess().getReleaseKeyword_1()); }
	'release'
	{ after(grammarAccess.getReleaseAccess().getReleaseKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComeHome__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComeHome__Group__0__Impl
	rule__ComeHome__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComeHome__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComeHomeAccess().getComeHomeAction_0()); }
	()
	{ after(grammarAccess.getComeHomeAccess().getComeHomeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComeHome__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComeHome__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComeHome__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComeHomeAccess().getComeHomeKeyword_1()); }
	'comeHome'
	{ after(grammarAccess.getComeHomeAccess().getComeHomeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scene__RobotAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSceneAccess().getRobotRobotParserRuleCall_0()); }
		ruleRobot
		{ after(grammarAccess.getSceneAccess().getRobotRobotParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getNameEStringParserRuleCall_1_1_0()); }
		ruleEString
		{ after(grammarAccess.getInstructionAccess().getNameEStringParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__NextInstructionTrueAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getNextInstructionTrueEStringParserRuleCall_2_0_1_0()); }
		ruleEString
		{ after(grammarAccess.getInstructionAccess().getNextInstructionTrueEStringParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__NextInstructionFalseAssignment_2_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getNextInstructionFalseEStringParserRuleCall_2_0_3_0()); }
		ruleEString
		{ after(grammarAccess.getInstructionAccess().getNextInstructionFalseEStringParserRuleCall_2_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__NextInstructionAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getNextInstructionEStringParserRuleCall_2_1_1_0()); }
		ruleEString
		{ after(grammarAccess.getInstructionAccess().getNextInstructionEStringParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__DebugAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getDebugDebugKeyword_2_0()); }
		(
			{ before(grammarAccess.getRobotAccess().getDebugDebugKeyword_2_0()); }
			'debug'
			{ after(grammarAccess.getRobotAccess().getDebugDebugKeyword_2_0()); }
		)
		{ after(grammarAccess.getRobotAccess().getDebugDebugKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__InstructionsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getInstructionsInstructionParserRuleCall_3_0_0()); }
		ruleInstruction
		{ after(grammarAccess.getRobotAccess().getInstructionsInstructionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__InstructionsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getInstructionsInstructionParserRuleCall_3_1_0()); }
		ruleInstruction
		{ after(grammarAccess.getRobotAccess().getInstructionsInstructionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveStraight__DistanceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveStraightAccess().getDistanceEIntParserRuleCall_1_0()); }
		ruleEInt
		{ after(grammarAccess.getMoveStraightAccess().getDistanceEIntParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnRight__AngleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurnRightAccess().getAngleEIntParserRuleCall_1_0()); }
		ruleEInt
		{ after(grammarAccess.getTurnRightAccess().getAngleEIntParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnLeft__AngleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurnLeftAccess().getAngleEIntParserRuleCall_1_0()); }
		ruleEInt
		{ after(grammarAccess.getTurnLeftAccess().getAngleEIntParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
